version: '3.8'
services:
  backend:
    build: ./backend
    env_file:
      - ./backend/.env.prod
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mysql
      - celery
    volumes:
      - ./backend:/app
    networks:
      - app_network
  celery:
    build: ./backend
    env_file:
      - ./backend/.env.prod
    command: celery -A app.api.task.task worker --loglevel=debug
    depends_on:
      - redis
    networks:
      - app_network
  redis:
    image: redis:5.0.1
    env_file:
      - ./backend/.env.prod
    networks:
      - app_network
  mysql:
    image: mysql:8.2
    env_file:
      - ./backend/.env.prod
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/mysql
    networks:
      - app_network
  flower:
    build: ./backend
    env_file:
      - ./backend/.env.prod
    command: celery -A app.api.task.task flower
    ports:
      - "5555:5555"
    depends_on:
      - celery
      - redis
    networks:
      - app_network
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      - BACKEND_WS_URL=ws://backend:8000/
    depends_on:
      - backend
    networks:
      - app_network
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
    networks:
      - app_network
volumes:
  db-data:
networks:
  app_network:
    driver: bridge